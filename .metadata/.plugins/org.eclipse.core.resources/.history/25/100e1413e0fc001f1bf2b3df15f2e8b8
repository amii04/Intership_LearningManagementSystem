package com.project.lms.servlet;
//
import com.project.lms.util.DBConnect;
import org.mindrot.jbcrypt.BCrypt;
//
//import java.io.IOException;
//import java.sql.Connection;
//import java.sql.PreparedStatement;
//import java.sql.ResultSet;
//
//import javax.servlet.ServletException;
//import javax.servlet.annotation.WebServlet;
//import javax.servlet.http.HttpServlet;
//import javax.servlet.http.HttpServletRequest;
//import javax.servlet.http.HttpServletResponse;
//
//@WebServlet("/login")
//public class loginServlet extends HttpServlet {
//    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
//        String email = request.getParameter("email");
//        String password = request.getParameter("password");
//
//        try (Connection conn = DBConnect.getInstance().getConnection();
//             PreparedStatement stmt = conn.prepareStatement("SELECT password, role FROM Users WHERE email = ?")) {
//            
//            stmt.setString(1, email);
//            ResultSet rs = stmt.executeQuery();
//
//            if (rs.next()) {
//                String storedHash = rs.getString("password");
//                String role = rs.getString("role");
//
//                if (BCrypt.checkpw(password, storedHash)) {
//                    if ("STUDENT".equalsIgnoreCase(role)) {
//                        response.sendRedirect("studashboard.jsp");
//                    } else if ("INSTRUCTOR".equalsIgnoreCase(role)) {
//                        response.sendRedirect("insdashboard.jsp");
//                    } else {
//                        request.setAttribute("errorMessage", "Invalid role.");
//                        request.setAttribute("email", email); // Preserve email
//                        request.getRequestDispatcher("login.jsp").forward(request, response);
//                    }
//                } else {
//                    request.setAttribute("errorMessage", "Invalid credentials. Please try again.");
//                    request.setAttribute("email", email); // Preserve email
//                    request.getRequestDispatcher("login.jsp").forward(request, response);
//                }
//            } else {
//                request.setAttribute("errorMessage", "User does not exist. Please register.");
//                request.setAttribute("email", email); // Preserve email
//                request.getRequestDispatcher("login.jsp").forward(request, response);
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//            request.setAttribute("errorMessage", "Server error. Please try again later.");
//            request.setAttribute("email", email); // Preserve email
//            request.getRequestDispatcher("login.jsp").forward(request, response);
//        }
//    }
//}

package com.project.lms.servlet;

import com.project.lms.util.DBConnect;
import org.mindrot.jbcrypt.BCrypt;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet("/login")
public class loginServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response) 
            throws ServletException, IOException {
        
        String email = request.getParameter("email");
        String password = request.getParameter("password");

        try (Connection conn = DBConnect.getInstance().getConnection();
             PreparedStatement stmt = conn.prepareStatement("SELECT password, role FROM Users WHERE email = ?")) {
            
            stmt.setString(1, email);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                String storedHash = rs.getString("password");
                String role = rs.getString("role");

                if (BCrypt.checkpw(password, storedHash)) { // Password matches
                    HttpSession session = request.getSession();
                    session.setAttribute("email", email);
                    session.setAttribute("role", role);
                    session.setMaxInactiveInterval(1800); // 30 minutes timeout

                    // Redirect based on role
                    if ("STUDENT".equalsIgnoreCase(role)) {
                        response.sendRedirect("studashboard.jsp");
                    } else if ("INSTRUCTOR".equalsIgnoreCase(role)) {
                        response.sendRedirect("insdashboard.jsp");
                    } else {
                        session.invalidate(); // Destroy invalid session
                        request.setAttribute("errorMessage", "Invalid role.");
                        request.getRequestDispatcher("login.jsp").forward(request, response);
                    }
                } else { // Password incorrect
                    request.setAttribute("errorMessage", "Invalid credentials. Please try again.");
                    request.getRequestDispatcher("login.jsp").forward(request, response);
                }
            } else { // User not found
                request.setAttribute("errorMessage", "User does not exist. Please register.");
                request.getRequestDispatcher("login.jsp").forward(request, response);
            }
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("errorMessage", "Server error. Please try again later.");
            request.getRequestDispatcher("login.jsp").forward(request, response);
        }
    }
}


