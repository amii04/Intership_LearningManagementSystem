package com.project.lms.servlet;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 * Servlet implementation class loginServlet
 */
@WebServlet("/login")
public class loginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public loginServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String email = request.getParameter("email");
        String password = request.getParameter("password");

        if (email == null || password == null || email.isEmpty() || password.isEmpty()) {
            response.sendRedirect("login.html?error=empty_fields");
            return;
        }

        try (Connection conn = DBConnect.getInstance().getConnection();
             PreparedStatement ps = conn.prepareStatement("SELECT password, role FROM users WHERE email = ?")) {

            ps.setString(1, email);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                String storedHashedPassword = rs.getString("password");
                String role = rs.getString("role");

                // âœ… Compare hashed password using BCrypt
                if (BCrypt.checkpw(password, storedHashedPassword)) {
                    HttpSession session = request.getSession();
                    session.setAttribute("user", email);
                    session.setAttribute("role", role);

                    if ("STUDENT".equalsIgnoreCase(role)) {
                        response.sendRedirect("studashboard.html");
                    } else if ("INSTRUCTOR".equalsIgnoreCase(role)) {
                        response.sendRedirect("instructordashboard.html");
                    } else {
                        response.sendRedirect("login.html?error=invalid_role");
                    }
                } else {
                    response.sendRedirect("login.html?error=invalid_password");
                }
            } else {
                response.sendRedirect("login.html?error=user_not_found");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            response.sendRedirect("login.html?error=db_error");
        }
    }
	}
	

}
